######################################################################
#
# CMAKE build recipe for PSP modules white-box coverage tests
#
######################################################################


# Function to simplify adding a coverage test for a PSP module
# This is very similar to the CFE "add_cfe_coverage" function, but
# include directories and link libraries are set up differently for PSP code,
# and it does not depend on having a FSW module by the same name.
function(add_psp_covtest MODULE_NAME TESTCASE_SRC UT_SRCS)

    # A consistent name convention for all targets generated by this function
    set(TEST_NAME "coverage-pspmod-${MODULE_NAME}")
    set(OBJECT_TARGET "${TEST_NAME}-object")
    set(RUNNER_TARGET "${TEST_NAME}-testrunner")

    # Compile the source unit(s) under test as a separate library
    # This is done so that special coverage-specific compile flags can be used on these files
    add_library(${OBJECT_TARGET} OBJECT
        ${UT_SRCS} ${ARGN}
    )

    # Apply the UT_COVERAGE_COMPILE_FLAGS to the units under test
    # This should enable coverage analysis on platforms that support this
    target_compile_options(${OBJECT_TARGET} PRIVATE
        ${UT_COVERAGE_COMPILE_FLAGS}
    )

    target_include_directories(${OBJECT_TARGET} PRIVATE
        ${PSPCOVERAGE_SOURCE_DIR}/ut-stubs/override_inc # overrides for system headers
        ${PSPCOVERAGE_SOURCE_DIR}/shared/inc
        ${CFEPSP_SOURCE_DIR}/fsw/inc                    # PSP public API
        ${CFEPSP_SOURCE_DIR}/fsw/shared/inc             # all PSP shared headers
        ${CFE_SOURCE_DIR}/cmake/target/inc              # for sysconfig headers
        $<TARGET_PROPERTY:osal,INTERFACE_INCLUDE_DIRECTORIES>  # use headers from OSAL
    )

    # Compile a test runner application, which contains the
    # actual coverage test code (test cases) and the unit under test
    add_executable(${RUNNER_TARGET}
        ${TESTCASE_SRC}
        $<TARGET_OBJECTS:${OBJECT_TARGET}>
    )

    # This also needs to be linked with UT_COVERAGE_LINK_FLAGS (for coverage)
    # This is also linked with any other stub libraries needed,
    # as well as the UT assert framework
    target_link_libraries(${RUNNER_TARGET}
        ${UT_COVERAGE_LINK_FLAGS}
        psp_module_api
        ut_psp_libc_stubs
        ut_osapi_stubs
        ut_assert
    )

    # Add it to the set of tests to run as part of "make test"
    add_test(${TEST_NAME} ${RUNNER_TARGET})
    foreach(TGT ${INSTALL_TARGET_LIST})
        install(TARGETS ${RUNNER_TARGET} DESTINATION ${TGT}/${UT_INSTALL_SUBDIR})
    endforeach()

endfunction(add_psp_covtest)


# a list of modules for which there is a coverage test implemented
add_subdirectory(timebase_vxworks)
add_subdirectory(vxworks_sysmon)
